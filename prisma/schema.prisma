// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String  @unique
  password  String
  createdAt DateTime  @default(now())
  notes     Note[]
  todos     Todo[]
  boards    Board[]
  kanbans   Kanban[]
}

model Note {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  content     String
  isPinned    Boolean   @default(false)
  isArchived  Boolean   @default(false)
  isFavorite  Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  userId      String    @db.ObjectId
}

model Todo {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  isPinned    Boolean     @default(false)
  isArchived  Boolean     @default(false)
  isFavorite  Boolean     @default(false)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  todolist    TodoList[]
  user        User        @relation(fields: [userId], references: [id])
  userId      String      @db.ObjectId
}

model TodoList {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  completed   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  todo        Todo      @relation(fields: [todoId], references: [id], onDelete: Cascade)
  todoId      String    @db.ObjectId
}

model Board {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  data        Json
  isPinned    Boolean   @default(false)
  isArchived  Boolean   @default(false)
  isFavorite  Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  userId      String    @db.ObjectId
}

model Kanban {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  status      String    @default("todo")
  category    String
  priority    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  userId      String    @db.ObjectId
}